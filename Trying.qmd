---
output: html_document
editor_options: 
  chunk_output_type: inline
---

```{r}
# Install and load the required package
install.packages("plotly")
library(plotly)

#3D surface

# Generate some data for the surface plot
x <- seq(-5, 5, length.out = 100)
y <- seq(-5, 5, length.out = 100)
z <- outer(x, y, function(x, y) sin(sqrt(x^2 + y^2)))

# Create the 3D surface plot
fig <- plot_ly(x = x, y = y, z = z, type = "surface")

# Customize the layout
fig <- fig %>% layout(
  scene = list(
    xaxis = list(title = "X Axis"),
    yaxis = list(title = "Y Axis"),
    zaxis = list(title = "Z Axis")
  )
)

# Show the plot
fig

```


```{r}
#Scatter pot


# Create the 3D scatter plot
fig <- plot_ly(
  x = all_results_df_SCCPs$`Replicate Name`, 
  y = all_results_df_SCCPs$`Homologue`, 
  z = all_results_df_SCCPs$`Relative_distribution`, 
  type = "scatter3d", 
  mode = "markers",
  marker = list(
    color = all_results_df_SCCPs$`Replicate Name`,
    colors = c("orange", "green", "purple")
  )
)
# Customize the layout
fig <- fig |>  layout(
  scene = list(
    xaxis = list(title = "Sample"),
    yaxis = list(title = "Homologue"),
    zaxis = list(title = "Relative distribution")
  )
)

# Show the plot
fig

```


```{r}


# Sample data for the donut chart
all_results_df_SCCPs2<-all_results_df_SCCPs |> 
filter(str_detect(Homologue, "NIST_R2", negate = TRUE))|>#Exclude the other samples
filter(str_detect(Homologue, "NIST_R3", negate = TRUE))#Exclude the other samples

# Create the donut chart
fig <- plot_ly(labels = all_results_df_SCCPs2$`Homologue`, values = all_results_df_SCCPs2$`Relative_distribution`, type = "pie", hole = 0.4)

# Customize the layout
fig <- fig  |>  layout(
  title = "Donut Chart for homologue distribution"
)

# Show the plot
fig

```

```{r}
#Line chart to see the homologue distribution 

fig <- plot_ly(
  x = all_results_df_SCCPs2$Simulated_pattern, 
  y = all_results_df_SCCPs2$Homologue, 
  type = "scatter", 
  mode = "lines"
)

# Customize the layout
fig <- fig %>% layout(
  title = "Line Chart",
  xaxis = list(title = "Simulated Pattern"),
  yaxis = list(title = "Homologue")
)

# Show the plot
fig


#Line chart to check the differences between the measured and the simulated for one homologue
# Selct which row of the data frame
row_to_plot <- all_results_df_SCCPs[1:8, ]

fig <- plot_ly(
  x = row_to_plot$Simulated_pattern, 
  y = row_to_plot$`Relative_distribution`, 
  type = "scatter", 
  mode = "lines"
)

# Customize the layout
fig <- fig %>% layout(
  title = "PCAs-C10",
  xaxis = list(title = "Simulated Pattern"),
  yaxis = list(title = "Relative_distribution")
)

# Show the plot
fig
```


```{r}
#Bar Chart



# Create the bar chart
fig <- plot_ly(x = all_results_df_SCCPs$`Homologue`, y = all_results_df_SCCPs$`Relative_distribution`, type = "bar")

# Customize the layout
fig <- fig |>  layout(
  title = "Bar Chart Homologue distribution",
  xaxis = list(title = "Homologue"),
  yaxis = list(title = "Relative distribution"),
   marker = list(color = all_results_df_SCCPs$`Replicate Name`,
                 colors= c("orange", "green", "purple"))
)

# Show the plot
fig

```



```{r}
#Box plot

# Create the box plot
fig <- plot_ly(x = all_results_df_SCCPs$`Replicate Name`, y = all_results_df_SCCPs$`Relative_distribution`, type = "box")

# Customize the layout
fig <- fig |> layout(
  title = "Box Plot diferences between samples",
  xaxis = list(title = "Samples"),
  yaxis = list(title = "Relative distribution")
)

# Show the plot
fig

```

```{r}
#Heat map

# Reshape the data into a matrix format for the heatmap
z <- matrix(all_results_df_SCCPs$Relative_distribution, nrow = nrow(all_results_df_SCCPs))

# Define row and column names for the heatmap
homologues <- unique(all_results_df_SCCPs$Homologue)
samples <- unique(all_results_df_SCCPs$`Replicate Name`)
colnames(z) <- samples
rownames(z) <- homologues

# Create the heatmap
fig <- plot_ly(z = ~z, x = samples, y = homologues, type = "heatmap")

# Customize the layout
fig <- fig %>% layout(
  title = "Heatmap of Relative Distribution of Homologues between Samples",
  xaxis = list(title = "Sample"),
  yaxis = list(title = "Homologue")
)

# Show the plot
fig

```

```{r}
#Bubble chart

# Sample data for the bubble chart
x <- rnorm(50)
y <- rnorm(50)
size <- runif(50, min = 5, max = 15)

# Create the bubble chart
fig <- plot_ly(x = x, y = y, type = "scatter", mode = "markers", marker = list(size = size))

# Customize the layout
fig <- fig |>  layout(
  title = "Bubble Chart Example",
  xaxis = list(title = "X Axis"),
  yaxis = list(title = "Y Axis")
)

# Show the plot
fig

```

```{r}
#Violin plot


# Sample data for the violin plot
x <- rep(c("A", "B", "C"), each = 50)
y <- rnorm(150)

# Create the violin plot
fig <- plot_ly(x = x, y = y, type = "violin")

# Customize the layout
fig <- fig %>% layout(
  title = "Violin Plot Example",
  xaxis = list(title = "Categories"),
  yaxis = list(title = "Values")
)

# Show the plot
fig


```


```{r}
#Tree map

# Sample data for the tree map
labels <- c("Parent", "Child 1", "Child 2", "Child 3")
parents <- c("", "Parent", "Parent", "Parent")
values <- c(100, 30, 40, 20)

# Create the tree map
fig <- plot_ly(
  ids = labels,
  labels = labels,
  parents = parents,
  values = values,
  type = "treemap"
)

# Customize the layout
fig <- fig %>% layout(
  title = "Tree Map Example"
)

# Show the plot
fig
```

```{r}
#funnel chart

# Sample data for the funnel-like chart
labels <- c("Awareness", "Interest", "Consideration", "Purchase")
values <- c(1000, 600, 300, 100)

# Create a bar chart with decreasing heights
fig <- plot_ly(x = labels, y = values, type = "funnel")

# Customize the layout
fig <- fig %>% layout(
  title = "Funnel-like Chart Example",
  xaxis = list(title = "Stages"),
  yaxis = list(title = "Values")
)

# Show the plot
fig

```

```{r}

#Histogram


# Sample data for the histogram
x <- rnorm(100)

# Create the histogram
fig <- plot_ly(x = x, type = "histogram")

# Customize the layout
fig <- fig %>% layout(
  title = "Histogram Example",
  xaxis = list(title = "Values"),
  yaxis = list(title = "Frequency")
)

# Show the plot
fig

```
```

